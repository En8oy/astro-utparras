---
import BaseLayout from '@layouts/BaseLayout.astro'
import MainSection from '@components/ui/sections/MainSection.astro'
import NewsCard from '@components/NewsCard.astro'
import NewsHero from '@components/NewsHero.astro'
import { getPublishedNews, getFeaturedNews } from '@/lib/news'
import { SITE } from '@/config'

const description = 'Mantente informado con las últimas noticias de la Universidad Tecnológica de Parras. Logros estudiantiles, eventos académicos y más.'
const URL = Astro.url.href

// Fetch news data
const featuredNews = await getFeaturedNews()
const allNews = await getPublishedNews()

// Get featured article (most recent)
const heroNews = featuredNews[0]
// Get remaining news for grid
const gridNews = allNews.slice(1)

// Categories for filtering (you can add this functionality later)
const categories = [
  'Todas',
  'Vida Estudiantil',
  'Académico',
  'Investigación e Innovación',
  'Vinculación Empresarial',
  'Infraestructura',
  'Eventos Institucionales',
  'Deportes y Cultura',
  'Reconocimientos',
  'Sustentabilidad',
  'Egresados',
  'Convocatorias',
  'Tecnología Educativa'
]
---

<BaseLayout
  title="Noticias"
  description={description}
  structuredData={{
    '@context': 'https://schema.org',
    '@type': 'WebPage',
    'inLanguage': 'es-MX',
    '@id': URL,
    'url': URL,
    'name': `Noticias - ${SITE.title}`,
    'description': description,
    'isPartOf': {
      '@type': 'WebSite',
      'url': SITE.url,
      'name': SITE.title,
      'description': SITE.description,
    },
  }}
>
  <MainSection 
    title="Noticias y Eventos" 
    subTitle="Mantente al día con las últimas novedades de nuestra universidad"
  />

  <section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8">
    <!-- Featured News Hero -->
    {heroNews && (
      <div class="mb-12">
        <NewsHero {...heroNews} />
      </div>
    )}

    <!-- Category Filter -->
    <div class="mb-8">
      <div class="flex flex-wrap gap-2 justify-center">
        {categories.map((category, index) => (
          <button 
            class={`category-btn px-4 py-2 rounded-full border text-sm font-medium transition-all duration-200 ${
              index === 0 
                ? 'bg-primary-500 text-white border-primary-500 shadow-lg' 
                : 'bg-white dark:bg-neutral-800 text-neutral-700 dark:text-neutral-300 border-neutral-200 dark:border-neutral-600 hover:bg-primary-50 dark:hover:bg-primary-900/20 hover:border-primary-200 dark:hover:border-primary-700 hover:text-primary-600 dark:hover:text-primary-400'
            }`}
            data-category={category}
          >
            {category}
          </button>
        ))}
      </div>
    </div>

    <!-- News Grid -->
    <div id="news-container">
      {gridNews.length > 0 ? (
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6" id="news-grid">
          {gridNews.map((news, index) => (
            <NewsCard 
              {...news} 
              featured={index === 0 && !heroNews}
            />
          ))}
        </div>
      ) : (
        <div class="text-center py-12" id="no-news">
          <svg class="w-16 h-16 text-neutral-400 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
          </svg>
          <h3 class="text-lg font-medium text-neutral-800 dark:text-neutral-200 mb-2">
            No hay noticias para esta categoría
          </h3>
          <p class="text-neutral-600 dark:text-neutral-400">
            Prueba seleccionando otra categoría.
          </p>
        </div>
      )}
    </div>

    <!-- Load More Button (for future pagination) -->
    {gridNews.length >= 9 && (
      <div class="text-center mt-12">
        <button class="bg-primary-500 hover:bg-primary-600 text-white px-8 py-3 rounded-lg font-medium transition-colors">
          Cargar más noticias
        </button>
      </div>
    )}
  </section>
</BaseLayout>

<script>
  // Datos de noticias para filtrado (se cargan desde el servidor)
  const allNewsData = JSON.parse(`${JSON.stringify(allNews)}`);
  
  const heroNewsData = JSON.parse(`${JSON.stringify(heroNews)}`);

  document.addEventListener('DOMContentLoaded', () => {
    const categoryButtons = document.querySelectorAll('.category-btn')
    const newsContainer = document.getElementById('news-container')
    
    // Función para crear el HTML de una tarjeta de noticia
    function createNewsCard(news, featured = false) {
      const formattedDate = new Date(news.published_at).toLocaleDateString('es-MX', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      })
      
      const defaultImage = '/images/utparras/utp_banner.jpg'
      
      return `
        <article class="group cursor-pointer rounded-xl border border-neutral-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 overflow-hidden hover:shadow-lg hover:scale-105 transition-all duration-300 ${featured ? 'md:col-span-2' : ''}">
          <a href="/noticias/${news.slug}" class="block">
            <div class="relative">
              <img 
                src="${news.featured_image || defaultImage}" 
                alt="${news.title}"
                class="w-full object-cover ${featured ? 'h-64' : 'h-48'}"
                loading="lazy"
              />
              ${news.category ? `<span class="absolute top-3 left-3 bg-primary-500 text-white px-2 py-1 rounded-md text-xs font-medium">${news.category}</span>` : ''}
            </div>
            
            <div class="p-6">
              <div class="flex items-center gap-2 text-xs text-neutral-500 dark:text-neutral-400 mb-3">
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <time datetime="${news.published_at}">${formattedDate}</time>
                <span>•</span>
                <span>${news.author}</span>
              </div>
              
              <h3 class="font-bold text-neutral-800 dark:text-neutral-200 mb-3 group-hover:text-primary-500 transition-colors ${featured ? 'text-xl' : 'text-lg'}">
                ${news.title}
              </h3>
              
              <p class="text-neutral-600 dark:text-neutral-400 line-clamp-3 ${featured ? 'text-base' : 'text-sm'}">
                ${news.excerpt}
              </p>
              
              <div class="flex items-center gap-2 mt-4 text-primary-500 text-sm font-medium group-hover:gap-3 transition-all">
                <span>Leer más</span>
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
              </div>
            </div>
          </a>
        </article>
      `
    }
    
    // Función para filtrar noticias
    function filterNews(selectedCategory) {
      let filteredNews = allNewsData;
      
      // Filtrar por categoría si no es "Todas"
      if (selectedCategory !== 'Todas') {
        filteredNews = allNewsData.filter(news => news.category === selectedCategory)
      }
      
      // Excluir la noticia hero si existe
      if (heroNewsData) {
        filteredNews = filteredNews.filter(news => news.id !== heroNewsData.id)
      }
      
      // Actualizar el contenido
      if (filteredNews.length > 0) {
        const newsGrid = filteredNews.map((news, index) => 
          createNewsCard(news, index === 0 && !heroNewsData)
        ).join('')
        
        newsContainer.innerHTML = `
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6" id="news-grid">
            ${newsGrid}
          </div>
        `
      } else {
        newsContainer.innerHTML = `
          <div class="text-center py-12" id="no-news">
            <svg class="w-16 h-16 text-neutral-400 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
            </svg>
            <h3 class="text-lg font-medium text-neutral-800 dark:text-neutral-200 mb-2">
              No hay noticias para esta categoría
            </h3>
            <p class="text-neutral-600 dark:text-neutral-400">
              Prueba seleccionando otra categoría.
            </p>
          </div>
        `
      }
    }
    
    // Event listeners para los botones de categoría
    categoryButtons.forEach(button => {
      button.addEventListener('click', () => {
        const selectedCategory = button.getAttribute('data-category')
        
        // Actualizar estilos de botones
        categoryButtons.forEach(btn => {
          btn.className = 'category-btn px-4 py-2 rounded-full border text-sm font-medium transition-all duration-200 bg-white dark:bg-neutral-800 text-neutral-700 dark:text-neutral-300 border-neutral-200 dark:border-neutral-600 hover:bg-primary-50 dark:hover:bg-primary-900/20 hover:border-primary-200 dark:hover:border-primary-700 hover:text-primary-600 dark:hover:text-primary-400'
        })
        
        // Aplicar estilo activo al botón seleccionado
        button.className = 'category-btn px-4 py-2 rounded-full border text-sm font-medium transition-all duration-200 bg-primary-500 text-white border-primary-500 shadow-lg'
        
        // Filtrar noticias
        filterNews(selectedCategory)
      })
    })
  })
</script>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>