---
import BaseLayout from '@layouts/BaseLayout.astro'
import { getNewsBySlug, getPublishedNews, formatNewsDate } from '@/lib/news'
import { SITE } from '@/config'
import { marked } from 'marked'

export async function getStaticPaths() {
  const news = await getPublishedNews()
  
  return news.map((article) => ({
    params: { slug: article.slug },
    props: { article }
  }))
}

const { article } = Astro.props

if (!article) {
  return Astro.redirect('/404')
}

const {
  title,
  content,
  excerpt,
  featured_image,
  author,
  published_at,
  category,
  tags
} = article

// Process markdown content
const htmlContent = marked(content || '')

const formattedDate = formatNewsDate(published_at)
const defaultImage = '/images/utparras/utp_banner.jpg'
const URL = Astro.url.href

// Get related news (same category, excluding current article)
const relatedNews = await getPublishedNews()
const filteredRelated = relatedNews
  .filter(news => news.id !== article.id && news.category === category)
  .slice(0, 3)
---

<BaseLayout
  title={title}
  description={excerpt}
  structuredData={{
    '@context': 'https://schema.org',
    '@type': 'NewsArticle',
    'headline': title,
    'description': excerpt,
    'image': featured_image || defaultImage,
    'author': {
      '@type': 'Person',
      'name': author
    },
    'publisher': {
      '@type': 'Organization',
      'name': SITE.title,
      'logo': {
        '@type': 'ImageObject',
        'url': `${SITE.url}/images/utparras/utp_logo.png`
      }
    },
    'datePublished': published_at,
    'dateModified': published_at,
    'mainEntityOfPage': {
      '@type': 'WebPage',
      '@id': URL
    }
  }}
>
  <!-- Article Header -->
  <section class="relative h-96 overflow-hidden">
    <img 
      src={featured_image || defaultImage} 
      alt={title}
      class="w-full h-full object-cover"
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent"></div>
  </section>

  <!-- Article Content -->
  <article class="mx-auto max-w-4xl px-4 py-10 sm:px-6 lg:px-8">
    <!-- Article Meta -->
    <div class="mb-8">
      {category && (
        <span class="inline-block bg-primary-500 text-white px-3 py-1 rounded-md text-sm font-medium mb-4">
          {category}
        </span>
      )}
      
      <h1 class="text-3xl md:text-4xl font-bold text-neutral-800 dark:text-neutral-200 mb-4 leading-tight">
        {title}
      </h1>
      
      <div class="flex flex-wrap items-center gap-4 text-sm text-neutral-600 dark:text-neutral-400 mb-6">
        <div class="flex items-center gap-2">
          <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
          <span>Por {author}</span>
        </div>
        
        <div class="flex items-center gap-2">
          <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <time datetime={published_at}>{formattedDate}</time>
        </div>
      </div>

      {tags && tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-6">
          {tags.map((tag) => (
            <span class="px-2 py-1 bg-neutral-100 dark:bg-neutral-700 text-neutral-600 dark:text-neutral-300 rounded text-xs">
              #{tag}
            </span>
          ))}
        </div>
      )}
    </div>

    <!-- Article Body -->
    <div class="prose prose-lg max-w-none dark:prose-invert prose-headings:text-neutral-800 dark:prose-headings:text-neutral-200 prose-p:text-neutral-600 dark:prose-p:text-neutral-400 prose-a:text-primary-500 hover:prose-a:text-primary-600" set:html={htmlContent}>
    </div>

    <!-- Share Buttons -->
    <div class="border-t border-neutral-200 dark:border-neutral-700 pt-8 mt-12">
      <h3 class="text-lg font-semibold text-neutral-800 dark:text-neutral-200 mb-4">
        Compartir art√≠culo
      </h3>
      <div class="flex gap-4">
        <a 
          href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(URL)}`}
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center gap-2 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition-colors"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
          </svg>
          <span>Twitter</span>
        </a>
        
        <a 
          href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(URL)}`}
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
          </svg>
          <span>Facebook</span>
        </a>
        
        <a 
          href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(URL)}`}
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center gap-2 px-4 py-2 bg-blue-700 hover:bg-blue-800 text-white rounded-md transition-colors"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
          <span>LinkedIn</span>
        </a>
      </div>
    </div>

    <!-- Back to News -->
    <div class="mt-8">
      <a 
        href="/noticias"
        class="inline-flex items-center gap-2 text-primary-500 hover:text-primary-600 transition-colors"
      >
        <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        <span>Volver a noticias</span>
      </a>
    </div>
  </article>

  <!-- Related News -->
  {filteredRelated.length > 0 && (
    <section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 border-t border-neutral-200 dark:border-neutral-700">
      <h2 class="text-2xl font-bold text-neutral-800 dark:text-neutral-200 mb-8 text-center">
        Noticias relacionadas
      </h2>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredRelated.map((news) => (
          <article class="group cursor-pointer rounded-xl border border-neutral-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 overflow-hidden hover:shadow-lg hover:scale-105 transition-all duration-300">
            <a href={`/noticias/${news.slug}`} class="block">
              <div class="relative">
                <img 
                  src={news.featured_image || defaultImage} 
                  alt={news.title}
                  class="w-full h-48 object-cover"
                  loading="lazy"
                />
                {news.category && (
                  <span class="absolute top-3 left-3 bg-primary-500 text-white px-2 py-1 rounded-md text-xs font-medium">
                    {news.category}
                  </span>
                )}
              </div>
              
              <div class="p-6">
                <div class="flex items-center gap-2 text-xs text-neutral-500 dark:text-neutral-400 mb-3">
                  <time datetime={news.published_at}>{formatNewsDate(news.published_at)}</time>
                </div>
                
                <h3 class="text-lg font-bold text-neutral-800 dark:text-neutral-200 mb-3 group-hover:text-primary-500 transition-colors line-clamp-2">
                  {news.title}
                </h3>
                
                <p class="text-sm text-neutral-600 dark:text-neutral-400 line-clamp-3">
                  {news.excerpt}
                </p>
              </div>
            </a>
          </article>
        ))}
      </div>
    </section>
  )}
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>