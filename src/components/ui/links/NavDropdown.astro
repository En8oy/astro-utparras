---
interface Props {
    name: string
    dropdown: { name: string; url: string }[]
}

const { name, dropdown } = Astro.props
---

<div class="nav-dropdown relative inline-block">
    <button
        type="button"
        class="dropdown-btn rounded-lg text-base font-medium text-neutral-600 outline-none ring-zinc-500 hover:text-neutral-500 focus-visible:ring dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-neutral-500 dark:focus:outline-none md:py-3 md:text-sm 2xl:text-base inline-flex items-center gap-1"
        aria-expanded="false"
        aria-haspopup="true"
    >
        {name}
        <svg 
            class="dropdown-icon w-4 h-4 transition-transform duration-200" 
            xmlns="http://www.w3.org/2000/svg" 
            viewBox="0 0 24 24" 
            fill="none" 
            stroke="currentColor" 
            stroke-width="2" 
            stroke-linecap="round" 
            stroke-linejoin="round"
        >
            <path d="m6 9 6 6 6-6"/>
        </svg>
    </button>

    <div 
        class="dropdown-content hidden"
        role="menu"
        style="position: absolute; right: 0; top: 100%; margin-top: 8px; width: 224px; background: white; border-radius: 8px; box-shadow: 0 10px 25px rgba(0,0,0,0.1); border: 1px solid #e5e5e5; z-index: 9999;"
    >
        <div class="py-2">
            {dropdown.map((item) => (
                <a 
                    href={item.url}
                    target={item.url.startsWith('http') ? '_blank' : '_self'}
                    rel={item.url.startsWith('http') ? 'noopener noreferrer' : ''}
                    class="group flex items-center px-4 py-3 text-base font-medium text-neutral-600 hover:bg-neutral-100 hover:text-neutral-500 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 transition-colors duration-200 md:text-sm 2xl:text-base"
                    role="menuitem"
                >
                    <svg 
                        class="mr-3 h-4 w-4" 
                        xmlns="http://www.w3.org/2000/svg" 
                        viewBox="0 0 24 24" 
                        fill="none" 
                        stroke="currentColor" 
                        stroke-width="2" 
                        stroke-linecap="round" 
                        stroke-linejoin="round"
                    >
                        {item.name === 'Pre-registro' ? (
                            <>
                                <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
                                <circle cx="9" cy="7" r="4"/>
                                <path d="m22 2-5 5"/>
                                <path d="m17 2 5 5"/>
                            </>
                        ) : item.name === 'Aula Virtual' ? (
                            <>
                                <rect width="18" height="10" x="3" y="11" rx="2"/>
                                <circle cx="12" cy="5" r="2"/>
                                <path d="m12 7-2 4"/>
                                <path d="m12 7 2 4"/>
                            </>
                        ) : item.name === 'Coahuila Transparente' || item.name === 'PNT' ? (
                            <>
                                <path d="M10 2v20"/>
                                <path d="M14 2v20"/>
                                <path d="M2 10h20"/>
                                <path d="M2 14h20"/>
                            </>
                        ) : item.name === 'Contraloría' || item.name === 'Contraloría Social' ? (
                            <>
                                <circle cx="12" cy="12" r="10"/>
                                <path d="M12 6v6l4 2"/>
                            </>
                        ) : item.name === 'Quejanet' ? (
                            <>
                                <path d="M4 4h16c1.1 0 2 .9 2 2v12c1.1 0 2 .9 2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
                                <polyline points="22,6 12,13 2,6"/>
                            </>
                        ) : (
                            <>
                                <circle cx="12" cy="12" r="1"/>
                                <circle cx="12" cy="5" r="1"/>
                                <circle cx="12" cy="19" r="1"/>
                            </>
                        )}
                    </svg>
                    {item.name}
                    {item.url.startsWith('http') && (
                        <svg 
                            class="ml-auto h-3 w-3 opacity-60" 
                            xmlns="http://www.w3.org/2000/svg" 
                            viewBox="0 0 24 24" 
                            fill="none" 
                            stroke="currentColor" 
                            stroke-width="2" 
                            stroke-linecap="round" 
                            stroke-linejoin="round"
                        >
                            <path d="M7 7h10v10"/>
                            <path d="M7 17 17 7"/>
                        </svg>
                    )}
                </a>
            ))}
        </div>
    </div>
</div>